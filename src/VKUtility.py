from src.DataPrinter import DataPrinter
from src.TokenManager import TokenManager
from src.VKAPIHandler import VKAPIHandler


class VKUtility:
    def __init__(self):
        self.token_manager = TokenManager()
        self.printer = DataPrinter()
        self.vk = None
        self.current_user = None
        self.commands = {
            'help': "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥",
            'info': "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
            'friends': "–°–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π",
            'albums': "–§–æ—Ç–æ–∞–ª—å–±–æ–º—ã",
            'exit': "–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã"
        }

    def _initialize_api(self):
        token = self.token_manager.load_token()

        if not token:
            token = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à VK API —Ç–æ–∫–µ–Ω: ").strip()
            if input(
                    "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è –±—É–¥—É—â–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤? (y/n): ").lower() in [
                'y', '–¥']:
                self.token_manager.save_token(token)

        self.vk = VKAPIHandler(token)
        try:
            self.current_user = self.vk.get_user_info('')
            print(
                f"\n‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {self.current_user['first_name']}!")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
            raise e

    def _show_help(self):
        print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        for cmd, desc in self.commands.items():
            print(f"‚ñ∂ {cmd.ljust(8)} - {desc}")

    def _process_command(self, command):
        if command == 'exit':
            print("\n–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã")
            return False
        elif command == 'help':
            self._show_help()
        elif command in ['info', 'friends', 'albums']:
            self._handle_user_command(command)
        else:
            print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ 'help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")
        return True

    def _handle_user_command(self, command):
        user_input = input(
            "–í–≤–µ–¥–∏—Ç–µ ID –∏–ª–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (Enter –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ): ").strip()

        user_id = None
        if user_input:
            if user_input.isdigit():  # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω —á–∏—Å–ª–æ–≤–æ–π ID
                user_id = int(user_input)
            else:  # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω screen_name
                try:
                    user_id = self.vk.resolve_screen_name(user_input)
                    if not user_id:
                        print("üòû –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                        return
                except Exception as e:
                    print(f"‚õî –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
                    return
        else:
            user_id = self.current_user['id']

        try:
            if command == 'info':
                user_info = self.vk.get_user_info(user_id)
                self.printer.print_user_info(
                    user_info) if user_info else print(
                    "üòû –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            elif command == 'friends':
                self.printer.print_friends(self.vk.get_friends(user_id))
            elif command == 'albums':
                self.printer.print_albums(self.vk.get_albums(user_id))
        except Exception as e:
            print(f"‚õî –û—à–∏–±–∫–∞: {e}")

    def run(self):
        try:
            self._initialize_api()
        except:
            return

        self._show_help()

        while True:
            try:
                command = input("\nüèÅ –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ").strip().lower()
                if not self._process_command(command):
                    break
            except KeyboardInterrupt:
                print("\nüö´ –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                break